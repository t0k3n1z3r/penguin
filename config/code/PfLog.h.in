/**
********************************************************************************
* @file         PfLog.h
* @brief        Penguin Framework [PF] primitives related to loging system
* @ingroup      PfAutoGenerated
* @author       Maksym Koshel (maks.koshel@gmail.com)
* @note         @PF_AUTOGEN_NOTICE@ 
* @date         Jun 18, 2015
* @copyright    Maksym Koshel (c) 2014. All rights reserved.
********************************************************************************
*/

#ifndef _PF_LOG_H_
#define _PF_LOG_H_

/**
********************************************************************************
* @enum         PF_DEBUG_LEVEL
* @brief        This enum defines all possible debug levels. If project was
*               compiled with MAX degug level PF_DEBUG_LEVEL_ERROR, it means
*               that only ERROR messages will be printed to the output buffer.
********************************************************************************
*/
typedef enum
{
    /**
    * @warning ATTENTION!: when you change this enumeration you should change
    *   DEBUG_CLASS_ALIASES array. It is placed in PfDebug.c file.
    */

    /**
    ****************************************************************************
    * @brief    Debug level ERROR
    ****************************************************************************
    */
    PF_DEBUG_LEVEL_ERROR        = @PF_DEBUG_LEVEL_ERROR_GENERATED@,

    /**
    ****************************************************************************
    * @brief    Debug level WARNING
    ****************************************************************************
    */
    PF_DEBUG_LEVEL_WARNING      = @PF_DEBUG_LEVEL_WARNING_GENERATED@,

    /**
    ****************************************************************************
    * @brief    Debug level INFORMATION
    ****************************************************************************
    */
    PF_DEBUG_LEVEL_INFO         = @PF_DEBUG_LEVEL_INFO_GENERATED@,

    /**
    ****************************************************************************
    * @brief    Maximal debug level
    ****************************************************************************
    */
    PF_DEBUG_LEVEL_MAX          = @PF_DEBUG_LEVEL_MAX_GENERATED@

} PF_DEBUG_LEVEL;

/**
********************************************************************************
* @enum         PF_DEBUG_CLASS
* @brief        This enum defines all possible debug classes. For each log
*               message will be printed a tag which is mapped to corresponding
*               debug class.
********************************************************************************
*/
typedef enum
{
    /**
    * @warning ATTENTION!: when you change this enumeration you should change
    *   DEBUG_CLASS_ALIASES array. It is placed in PfDebug.c file.
    */

    /**
    ****************************************************************************
    * @brief    Undefined class
    ****************************************************************************
    */
    PF_DEBUG_CLASS_UNDEFINED    = @PF_DEBUG_CLASS_UNDEFINED_GENERATED@,

    /**
    ****************************************************************************
    * @brief    libcore debug class
    ****************************************************************************
    */
    PF_DEBUG_CLASS_CORE         = @PF_DEBUG_CLASS_CORE_GENERATED@,

    /**
    ****************************************************************************
    * @brief    libprotocol class
    ****************************************************************************
    */
    PF_DEBUG_CLASS_PROTOCOL     = @PF_DEBUG_CLASS_PROTOCOL_GENERATED@,

    /**
    ****************************************************************************
    * @brief    libtransport class
    ****************************************************************************
    */
    PF_DEBUG_CLASS_TRANSPORT    = @PF_DEBUG_CLASS_TRANSPORT_GENERATED@,

    /**
    ****************************************************************************
    * @brief    Main application, Test and other staff
    ****************************************************************************
    */
    PF_DEBUG_CLASS_PENGUIN      = @PF_DEBUG_CLASS_PENGUIN_GENERATED@,

    /**
    ****************************************************************************
    * @brief    libprotocol class
    ****************************************************************************
    */
    PF_DEBUG_CLASS_MAX          = @PF_DEBUG_CLASS_MAX_GENERATED@
    
} PF_DEBUG_CLASS;

#endif  /* !_PF_LOG_H_ */
